{"version":3,"file":"static/js/781.d006e915.chunk.js","mappings":"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","sources":["ApiFunctions/category.js","components/card/ProductCard.js","components/category/CategoryHome.js"],"sourcesContent":["import axios from \"axios\";\r\nexport const getCategories = async () => {\r\n    return await axios.get(`${process.env.REACT_APP_API}/categories`, {\r\n      headers: {\r\n      }\r\n    });\r\n  };\r\nexport const getCategory = async (slug) => {\r\n    return await axios.get(`${process.env.REACT_APP_API}/category/${slug}`, {\r\n      headers: {\r\n        \r\n      }\r\n    });\r\n  };\r\nexport const removeCategory = async (slug,authtoken) => {\r\n    return await axios.delete(`${process.env.REACT_APP_API}/category/${slug}`, {\r\n      headers: {\r\n        authtoken\r\n      }\r\n    });\r\n  };\r\nexport const updateCategory = async (slug,category,authtoken) => {\r\n    return await axios.put(`${process.env.REACT_APP_API}/category/${slug}`, category,{\r\n      headers: {\r\n        authtoken\r\n      }\r\n    });\r\n  };\r\nexport const createCategory = async (category,authtoken) => {\r\n    return await axios.post(`${process.env.REACT_APP_API}/category`, category,{\r\n      headers: {\r\n        authtoken\r\n      }\r\n    });\r\n  };\r\n  export const getCategorySubs = async (_id) => {\r\n    return await axios.get(`${process.env.REACT_APP_API}/category/subs/${_id}`, {\r\n      headers: {\r\n        \r\n      }\r\n    });\r\n  };","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Typography, Skeleton,message } from \"antd\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport lodash from 'lodash'\r\nimport { Addtocart } from \"../../store/slices/cartSlice\";\r\nimport \"../../css/productcard.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openDrawer } from \"../../store/slices/drawerSlice\";\r\n\r\nconst { Meta } = Card;\r\nconst { Text } = Typography;\r\n\r\nconst ProductCard = ({ product, loading }) => {\r\n  const dispatch=useDispatch()\r\n  const handleAddToCart = () => {\r\n    // create cart array\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      // if cart is in local storage\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart')); // parse the string into an array\r\n      }\r\n    \r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n    \r\n      // remove duplicates\r\n      let unique = lodash.uniqWith(cart, lodash.isEqual);\r\n      console.log('unique', unique);\r\n    \r\n      localStorage.setItem('cart', JSON.stringify(unique)); // store JSON in storage so JSON.stringify used :)\r\n      // add to redux state\r\n      dispatch(Addtocart(cart))\r\n      //show cart items in drawer\r\n      dispatch(openDrawer(true))\r\n\r\n    }\r\n    message.info(\"Added to cart\")\r\n  };\r\n  const navigate = useNavigate();\r\n  const { title, description, images, slug, price } = product;\r\n  const imageUrl = images && images.length ? images[0][0].url : \"\";\r\n\r\n\r\n  \r\n  const [showLoading, setShowLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Show loading state for 2 seconds and then display the actual card for a better attractive feeling :)\r\n    const timer = setTimeout(() => {\r\n      setShowLoading(false);\r\n    }, 800);\r\n\r\n    // Clean up \r\n    return () => clearTimeout(timer);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <Card\r\n      hoverable\r\n      loading={loading || showLoading} // Show loading state if either loading prop or showLoading is true :)\r\n      cover={\r\n        //wohoooooooo\r\n        /* this logic to show loading image skeleton and loading card synchronously so that one will not appear first, both will appear together :) :)*/\r\n        loading || showLoading ? ( // Use Skeleton.Image if in the loading state    \r\n          <Skeleton.Image\r\n            style={{ width: \"100%\", height: \"auto\", paddingBottom: \"60%\" }}\r\n          />\r\n        ) : (\r\n          <img src={imageUrl} alt={title} /> // Show the actual image when not in the loading state\r\n        )\r\n      }\r\n      actions={[\r\n        <Link to={`/product/${slug}`}>\r\n          <EyeOutlined /> <br /> view\r\n        </Link>,\r\n        <a onClick={handleAddToCart}>\r\n          <ShoppingCartOutlined /> <br />\r\n          Add to cart\r\n        </a>,\r\n      ]}\r\n      className=\"product-card\"\r\n    >\r\n      {/* shorten the description using substring below */}\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 35)}...`}\r\n      />\r\n      {/* another meta tag for price */}\r\n      <Meta title={<Text style={{ color: \"#008080\" }}>â‚¹{price}</Text>} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCategory } from '../../ApiFunctions/category';\r\nimport { message } from 'antd';\r\nimport '../../css/categoryitems.css'\r\nimport ProductCard from '../card/ProductCard';\r\nconst CategoryHome = () => {\r\n    const [category,setCategory]=useState({})\r\n    const [products,setProducts]=useState([]);\r\n    const [loading,setLoading]=useState(false)\r\n\r\n    const {slug}=useParams();\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        getCategory(slug)\r\n        .then((res)=>{\r\n            // console.log(JSON.stringify(c.data))\r\n            setCategory(res.data.category)\r\n            setProducts(res.data.products)\r\n            setLoading(false)\r\n\r\n\r\n        }).catch((err)=>{\r\n            message.error(\"backend error\")\r\n        })\r\n\r\n    },[])\r\n  return (\r\n    <div className='category-items'>\r\n        {/* {slug} */}\r\n    {loading?(<h4 >loading...</h4>):(\r\n        <h4 className='category-items-header'> fetched {products.length}  items from  \"{category.name}\"category</h4>\r\n    )}\r\n    \r\n    {/* {JSON.stringify(category)} */}\r\n    <div className='products'>\r\n        {products.map((p)=>(\r\n            <ProductCard key={p._id} product={p}/>\r\n        ))}\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryHome"],"names":["getCategories","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","process","headers","abrupt","sent","stop","apply","arguments","getCategory","_ref2","_callee2","slug","_context2","_x","removeCategory","_ref3","_callee3","authtoken","_context3","delete","_x2","_x3","updateCategory","_ref4","_callee4","category","_context4","put","_x4","_x5","_x6","createCategory","_ref5","_callee5","_context5","post","_x7","_x8","getCategorySubs","_ref6","_callee6","_id","_context6","_x9","Meta","Card","Text","Typography","product","loading","dispatch","useDispatch","title","useNavigate","description","images","price","imageUrl","length","url","_useState","useState","_useState2","_slicedToArray","showLoading","setShowLoading","useEffect","timer","setTimeout","clearTimeout","_jsxs","hoverable","cover","_jsx","Skeleton","Image","style","width","height","paddingBottom","src","alt","actions","Link","to","children","EyeOutlined","onClick","cart","window","localStorage","getItem","JSON","parse","push","_objectSpread","count","unique","lodash","console","log","setItem","stringify","Addtocart","openDrawer","message","info","ShoppingCartOutlined","className","substring","color","setCategory","_useState3","_useState4","products","setProducts","_useState5","_useState6","setLoading","useParams","then","res","data","catch","err","error","name","map","p","ProductCard"],"sourceRoot":""}